#| label: library and function define
#| echo: false
#| warning: false
library(riskCommunicator)
library(tidyverse)
library(tableone)
library(nhanesA)
library(knitr)
missing_heatmap <- function(data,title,color_pre = "yellow", color_miss = "black"){
missing_values <- is.na(data)
# Melt the matrix for use with ggplot
missing_melted <- reshape2::melt(missing_values,
id.vars = rownames(missing_values))
# Create the heatmap
g <- ggplot2::ggplot(missing_melted, aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = value)) +
scale_fill_manual(name = "", labels = c("Present", "Missing"),
values = c(color_pre,color_miss)) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "Variables", y = "Observations",title = title)+
theme(plot.title = element_text(hjust = 0.5))
return(g)
}
#| warning: false
#| label: framingham_data
#| echo: false
data("framingham")
# The Framingham data has been used to create models for cardiovascular risk.
# The variable selection and model below are designed to mimic the models used
# in the paper General Cardiovascular Risk Profile for Use in Primary Care
# This paper is available (cvd_risk_profile.pdf) on Canvas.
framingham_df <- framingham %>% select(c(CVD, TIMECVD, SEX, TOTCHOL, AGE,
SYSBP, DIABP, CURSMOKE, DIABETES, BPMEDS,
HDLC, BMI))
### Missing data
#framingham_df <- na.omit(framingham_df)
#CreateTableOne(data=framingham_df, strata = c("SEX"))
# Get blood pressure based on whether or not on BPMEDS
framingham_df$SYSBP_UT <- ifelse(framingham_df$BPMEDS == 0,
framingham_df$SYSBP, 0)
framingham_df$SYSBP_T <- ifelse(framingham_df$BPMEDS == 1,
framingham_df$SYSBP, 0)
# Looking at risk within 15 years - remove censored data
#dim(framingham_df)
framingham_df <- framingham_df %>%
filter(!(CVD == 0 & TIMECVD <= 365*15)) %>%
select(-c(TIMECVD))
a <- CreateTableOne(data=framingham_df, strata = c("SEX"))
table_matrix <- print(a, printToggle = FALSE, noSpaces = TRUE)[,-4]
colnames(table_matrix)[1] <- "Male"
colnames(table_matrix)[2] <- "Female"
# Use kable to render the table
kable(table_matrix, format = "latex", booktabs = TRUE,
col.names = c("Variable", "Male", "Female", "p-value"))
# Filter to each sex
framingham_df_men <- framingham_df %>% filter(SEX == 1)
framingham_df_women <- framingham_df %>% filter(SEX == 2)
#| echo: false
#| label: nhanes_data
#| warning: false
# blood pressure, demographic, bmi, smoking, and hypertension info
bpx_2017 <- nhanes("BPX_J") %>%
select(SEQN, BPXSY1 ) %>%
rename(SYSBP = BPXSY1)
demo_2017 <- nhanes("DEMO_J") %>%
select(SEQN, RIAGENDR, RIDAGEYR) %>%
rename(SEX = RIAGENDR, AGE = RIDAGEYR)
bmx_2017 <- nhanes("BMX_J") %>%
select(SEQN, BMXBMI) %>%
rename(BMI = BMXBMI)
smq_2017 <- nhanes("SMQ_J") %>%
mutate(CURSMOKE = case_when(SMQ040 %in% c(1,2) ~ 1,
SMQ040 == 3 ~ 0,
SMQ020 == 2 ~ 0)) %>%
select(SEQN, CURSMOKE)
bpq_2017 <- nhanes("BPQ_J") %>%
mutate(BPMEDS = ifelse(BPQ050A == 1, 1, 0)) %>%
select(SEQN, BPMEDS)
tchol_2017 <- nhanes("TCHOL_J") %>%
select(SEQN, LBXTC) %>%
rename(TOTCHOL = LBXTC)
hdl_2017 <- nhanes("HDL_J") %>%
select(SEQN, LBDHDD) %>%
rename(HDLC = LBDHDD)
diq_2017 <- nhanes("DIQ_J") %>%
mutate(DIABETES = case_when(DIQ010 == 1 ~ 1,
DIQ010 %in% c(2,3) ~ 0,
TRUE ~ NA)) %>%
select(SEQN, DIABETES)
# Join data from different tables
df_2017 <- bpx_2017 %>%
full_join(demo_2017, by = "SEQN") %>%
full_join(bmx_2017, by = "SEQN") %>%
full_join(hdl_2017, by = "SEQN") %>%
full_join(smq_2017, by = "SEQN") %>%
full_join(bpq_2017, by = "SEQN") %>%
full_join(tchol_2017, by = "SEQN") %>%
full_join(diq_2017, by = "SEQN")
b <- CreateTableOne(data = df_2017, strata = c("SEX"))
table_matrix <- print(b, printToggle = FALSE, noSpaces = TRUE)[,-4]
colnames(table_matrix)[1] <- "Male"
colnames(table_matrix)[2] <- "Female"
# Use kable to render the table
kable(table_matrix, format = "latex", booktabs = TRUE,
col.names = c("Variable", "Male", "Female", "p-value"))
# knitr::kable(table_matrix, format = "latex", booktabs = TRUE)
#| label: missing data
#| warning: false
#| echo: false
missing_heatmap(data = framingham_df, title = "framingham","yellow","black")
missing_heatmap(data = df_2017, title = "NHANES_2017","yellow","black")
?framingham
